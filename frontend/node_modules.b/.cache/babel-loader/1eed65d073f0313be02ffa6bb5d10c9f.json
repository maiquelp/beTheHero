{"ast":null,"code":"(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.VMasker = factory();\n  }\n})(this, function () {\n  var DIGIT = \"9\",\n      ALPHA = \"A\",\n      ALPHANUM = \"S\",\n      BY_PASS_KEYS = [9, 16, 17, 18, 36, 37, 38, 39, 40, 91, 92, 93],\n      isAllowedKeyCode = function (keyCode) {\n    for (var i = 0, len = BY_PASS_KEYS.length; i < len; i++) {\n      if (keyCode == BY_PASS_KEYS[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  },\n      mergeMoneyOptions = function (opts) {\n    opts = opts || {};\n    opts = {\n      delimiter: opts.delimiter || \".\",\n      lastOutput: opts.lastOutput,\n      precision: opts.hasOwnProperty(\"precision\") ? opts.precision : 2,\n      separator: opts.separator || \",\",\n      showSignal: opts.showSignal,\n      suffixUnit: opts.suffixUnit && \" \" + opts.suffixUnit.replace(/[\\s]/g, '') || \"\",\n      unit: opts.unit && opts.unit.replace(/[\\s]/g, '') + \" \" || \"\",\n      zeroCents: opts.zeroCents\n    };\n    opts.moneyPrecision = opts.zeroCents ? 0 : opts.precision;\n    return opts;\n  },\n      // Fill wildcards past index in output with placeholder\n  addPlaceholdersToOutput = function (output, index, placeholder) {\n    for (; index < output.length; index++) {\n      if (output[index] === DIGIT || output[index] === ALPHA || output[index] === ALPHANUM) {\n        output[index] = placeholder;\n      }\n    }\n\n    return output;\n  };\n\n  var VanillaMasker = function (elements) {\n    this.elements = elements;\n  };\n\n  VanillaMasker.prototype.unbindElementToMask = function () {\n    for (var i = 0, len = this.elements.length; i < len; i++) {\n      this.elements[i].lastOutput = \"\";\n      this.elements[i].onkeyup = false;\n      this.elements[i].onkeydown = false;\n\n      if (this.elements[i].value.length) {\n        this.elements[i].value = this.elements[i].value.replace(/\\D/g, '');\n      }\n    }\n  };\n\n  VanillaMasker.prototype.bindElementToMask = function (maskFunction) {\n    var that = this,\n        onType = function (e) {\n      e = e || window.event;\n      var source = e.target || e.srcElement;\n\n      if (isAllowedKeyCode(e.keyCode)) {\n        setTimeout(function () {\n          that.opts.lastOutput = source.lastOutput;\n          source.value = VMasker[maskFunction](source.value, that.opts);\n          source.lastOutput = source.value;\n\n          if (source.setSelectionRange && that.opts.suffixUnit) {\n            source.setSelectionRange(source.value.length, source.value.length - that.opts.suffixUnit.length);\n          }\n        }, 0);\n      }\n    };\n\n    for (var i = 0, len = this.elements.length; i < len; i++) {\n      this.elements[i].lastOutput = \"\";\n      this.elements[i].onkeyup = onType;\n\n      if (this.elements[i].value.length) {\n        this.elements[i].value = VMasker[maskFunction](this.elements[i].value, this.opts);\n      }\n    }\n  };\n\n  VanillaMasker.prototype.maskMoney = function (opts) {\n    this.opts = mergeMoneyOptions(opts);\n    this.bindElementToMask(\"toMoney\");\n  };\n\n  VanillaMasker.prototype.maskNumber = function () {\n    this.opts = {};\n    this.bindElementToMask(\"toNumber\");\n  };\n\n  VanillaMasker.prototype.maskAlphaNum = function () {\n    this.opts = {};\n    this.bindElementToMask(\"toAlphaNumeric\");\n  };\n\n  VanillaMasker.prototype.maskPattern = function (pattern) {\n    this.opts = {\n      pattern: pattern\n    };\n    this.bindElementToMask(\"toPattern\");\n  };\n\n  VanillaMasker.prototype.unMask = function () {\n    this.unbindElementToMask();\n  };\n\n  var VMasker = function (el) {\n    if (!el) {\n      throw new Error(\"VanillaMasker: There is no element to bind.\");\n    }\n\n    var elements = \"length\" in el ? el.length ? el : [] : [el];\n    return new VanillaMasker(elements);\n  };\n\n  VMasker.toMoney = function (value, opts) {\n    opts = mergeMoneyOptions(opts);\n\n    if (opts.zeroCents) {\n      opts.lastOutput = opts.lastOutput || \"\";\n      var zeroMatcher = \"(\" + opts.separator + \"[0]{0,\" + opts.precision + \"})\",\n          zeroRegExp = new RegExp(zeroMatcher, \"g\"),\n          digitsLength = value.toString().replace(/[\\D]/g, \"\").length || 0,\n          lastDigitLength = opts.lastOutput.toString().replace(/[\\D]/g, \"\").length || 0;\n      value = value.toString().replace(zeroRegExp, \"\");\n\n      if (digitsLength < lastDigitLength) {\n        value = value.slice(0, value.length - 1);\n      }\n    }\n\n    var number = value.toString().replace(/[\\D]/g, \"\"),\n        clearDelimiter = new RegExp(\"^(0|\\\\\" + opts.delimiter + \")\"),\n        clearSeparator = new RegExp(\"(\\\\\" + opts.separator + \")$\"),\n        money = number.substr(0, number.length - opts.moneyPrecision),\n        masked = money.substr(0, money.length % 3),\n        cents = new Array(opts.precision + 1).join(\"0\");\n    money = money.substr(money.length % 3, money.length);\n\n    for (var i = 0, len = money.length; i < len; i++) {\n      if (i % 3 === 0) {\n        masked += opts.delimiter;\n      }\n\n      masked += money[i];\n    }\n\n    masked = masked.replace(clearDelimiter, \"\");\n    masked = masked.length ? masked : \"0\";\n    var signal = \"\";\n\n    if (opts.showSignal === true) {\n      signal = value < 0 || value.startsWith && value.startsWith('-') ? \"-\" : \"\";\n    }\n\n    if (!opts.zeroCents) {\n      var beginCents = number.length - opts.precision,\n          centsValue = number.substr(beginCents, opts.precision),\n          centsLength = centsValue.length,\n          centsSliced = opts.precision > centsLength ? opts.precision : centsLength;\n      cents = (cents + centsValue).slice(-centsSliced);\n    }\n\n    var output = opts.unit + signal + masked + opts.separator + cents;\n    return output.replace(clearSeparator, \"\") + opts.suffixUnit;\n  };\n\n  VMasker.toPattern = function (value, opts) {\n    var pattern = typeof opts === 'object' ? opts.pattern : opts,\n        patternChars = pattern.replace(/\\W/g, ''),\n        output = pattern.split(\"\"),\n        values = value.toString().replace(/\\W/g, \"\"),\n        charsValues = values.replace(/\\W/g, ''),\n        index = 0,\n        i,\n        outputLength = output.length,\n        placeholder = typeof opts === 'object' ? opts.placeholder : undefined;\n\n    for (i = 0; i < outputLength; i++) {\n      // Reached the end of input\n      if (index >= values.length) {\n        if (patternChars.length == charsValues.length) {\n          return output.join(\"\");\n        } else if (placeholder !== undefined && patternChars.length > charsValues.length) {\n          return addPlaceholdersToOutput(output, i, placeholder).join(\"\");\n        } else {\n          break;\n        }\n      } // Remaining chars in input\n      else {\n          if (output[i] === DIGIT && values[index].match(/[0-9]/) || output[i] === ALPHA && values[index].match(/[a-zA-Z]/) || output[i] === ALPHANUM && values[index].match(/[0-9a-zA-Z]/)) {\n            output[i] = values[index++];\n          } else if (output[i] === DIGIT || output[i] === ALPHA || output[i] === ALPHANUM) {\n            if (placeholder !== undefined) {\n              return addPlaceholdersToOutput(output, i, placeholder).join(\"\");\n            } else {\n              return output.slice(0, i).join(\"\");\n            }\n          }\n        }\n    }\n\n    return output.join(\"\").substr(0, i);\n  };\n\n  VMasker.toNumber = function (value) {\n    return value.toString().replace(/(?!^-)[^0-9]/g, \"\");\n  };\n\n  VMasker.toAlphaNumeric = function (value) {\n    return value.toString().replace(/[^a-z0-9 ]+/i, \"\");\n  };\n\n  return VMasker;\n});","map":{"version":3,"sources":["/home/maiquelp/Projects/rocketSeat/semanaOministack11BeTheHero/frontend/node_modules/vanilla-masker/lib/vanilla-masker.js"],"names":["root","factory","define","amd","exports","module","VMasker","DIGIT","ALPHA","ALPHANUM","BY_PASS_KEYS","isAllowedKeyCode","keyCode","i","len","length","mergeMoneyOptions","opts","delimiter","lastOutput","precision","hasOwnProperty","separator","showSignal","suffixUnit","replace","unit","zeroCents","moneyPrecision","addPlaceholdersToOutput","output","index","placeholder","VanillaMasker","elements","prototype","unbindElementToMask","onkeyup","onkeydown","value","bindElementToMask","maskFunction","that","onType","e","window","event","source","target","srcElement","setTimeout","setSelectionRange","maskMoney","maskNumber","maskAlphaNum","maskPattern","pattern","unMask","el","Error","toMoney","zeroMatcher","zeroRegExp","RegExp","digitsLength","toString","lastDigitLength","slice","number","clearDelimiter","clearSeparator","money","substr","masked","cents","Array","join","signal","startsWith","beginCents","centsValue","centsLength","centsSliced","toPattern","patternChars","split","values","charsValues","outputLength","undefined","match","toNumber","toAlphaNumeric"],"mappings":"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","sourcesContent":["(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define(factory);\n  } else if (typeof exports === 'object') {\n    module.exports = factory();\n  } else {\n    root.VMasker = factory();\n  }\n}(this, function() {\n  var DIGIT = \"9\",\n      ALPHA = \"A\",\n      ALPHANUM = \"S\",\n      BY_PASS_KEYS = [9, 16, 17, 18, 36, 37, 38, 39, 40, 91, 92, 93],\n      isAllowedKeyCode = function(keyCode) {\n        for (var i = 0, len = BY_PASS_KEYS.length; i < len; i++) {\n          if (keyCode == BY_PASS_KEYS[i]) {\n            return false;\n          }\n        }\n        return true;\n      },\n      mergeMoneyOptions = function(opts) {\n        opts = opts || {};\n        opts = {\n          delimiter: opts.delimiter || \".\",\n          lastOutput: opts.lastOutput,\n          precision: opts.hasOwnProperty(\"precision\") ? opts.precision : 2,\n          separator: opts.separator || \",\",\n          showSignal: opts.showSignal,\n          suffixUnit: opts.suffixUnit && (\" \" + opts.suffixUnit.replace(/[\\s]/g,'')) || \"\",\n          unit: opts.unit && (opts.unit.replace(/[\\s]/g,'') + \" \") || \"\",\n          zeroCents: opts.zeroCents\n        };\n        opts.moneyPrecision = opts.zeroCents ? 0 : opts.precision;\n        return opts;\n      },\n      // Fill wildcards past index in output with placeholder\n      addPlaceholdersToOutput = function(output, index, placeholder) {\n        for (; index < output.length; index++) {\n          if(output[index] === DIGIT || output[index] === ALPHA || output[index] === ALPHANUM) {\n            output[index] = placeholder;\n          }\n        }\n        return output;\n      }\n  ;\n\n  var VanillaMasker = function(elements) {\n    this.elements = elements;\n  };\n\n  VanillaMasker.prototype.unbindElementToMask = function() {\n    for (var i = 0, len = this.elements.length; i < len; i++) {\n      this.elements[i].lastOutput = \"\";\n      this.elements[i].onkeyup = false;\n      this.elements[i].onkeydown = false;\n\n      if (this.elements[i].value.length) {\n        this.elements[i].value = this.elements[i].value.replace(/\\D/g, '');\n      }\n    }\n  };\n\n  VanillaMasker.prototype.bindElementToMask = function(maskFunction) {\n    var that = this,\n        onType = function(e) {\n          e = e || window.event;\n          var source = e.target || e.srcElement;\n\n          if (isAllowedKeyCode(e.keyCode)) {\n            setTimeout(function() {\n              that.opts.lastOutput = source.lastOutput;\n              source.value = VMasker[maskFunction](source.value, that.opts);\n              source.lastOutput = source.value;\n              if (source.setSelectionRange && that.opts.suffixUnit) {\n                source.setSelectionRange(source.value.length, (source.value.length - that.opts.suffixUnit.length));\n              }\n            }, 0);\n          }\n        }\n    ;\n    for (var i = 0, len = this.elements.length; i < len; i++) {\n      this.elements[i].lastOutput = \"\";\n      this.elements[i].onkeyup = onType;\n      if (this.elements[i].value.length) {\n        this.elements[i].value = VMasker[maskFunction](this.elements[i].value, this.opts);\n      }\n    }\n  };\n\n  VanillaMasker.prototype.maskMoney = function(opts) {\n    this.opts = mergeMoneyOptions(opts);\n    this.bindElementToMask(\"toMoney\");\n  };\n\n  VanillaMasker.prototype.maskNumber = function() {\n    this.opts = {};\n    this.bindElementToMask(\"toNumber\");\n  };\n  \n  VanillaMasker.prototype.maskAlphaNum = function() {\n    this.opts = {};\n    this.bindElementToMask(\"toAlphaNumeric\");\n  };\n\n  VanillaMasker.prototype.maskPattern = function(pattern) {\n    this.opts = {pattern: pattern};\n    this.bindElementToMask(\"toPattern\");\n  };\n\n  VanillaMasker.prototype.unMask = function() {\n    this.unbindElementToMask();\n  };\n\n  var VMasker = function(el) {\n    if (!el) {\n      throw new Error(\"VanillaMasker: There is no element to bind.\");\n    }\n    var elements = (\"length\" in el) ? (el.length ? el : []) : [el];\n    return new VanillaMasker(elements);\n  };\n\n  VMasker.toMoney = function(value, opts) {\n    opts = mergeMoneyOptions(opts);\n    if (opts.zeroCents) {\n      opts.lastOutput = opts.lastOutput || \"\";\n      var zeroMatcher = (\"(\"+ opts.separator +\"[0]{0,\"+ opts.precision +\"})\"),\n          zeroRegExp = new RegExp(zeroMatcher, \"g\"),\n          digitsLength = value.toString().replace(/[\\D]/g, \"\").length || 0,\n          lastDigitLength = opts.lastOutput.toString().replace(/[\\D]/g, \"\").length || 0\n      ;\n      value = value.toString().replace(zeroRegExp, \"\");\n      if (digitsLength < lastDigitLength) {\n        value = value.slice(0, value.length - 1);\n      }\n    }\n    var number = value.toString().replace(/[\\D]/g, \"\"),\n        clearDelimiter = new RegExp(\"^(0|\\\\\"+ opts.delimiter +\")\"),\n        clearSeparator = new RegExp(\"(\\\\\"+ opts.separator +\")$\"),\n        money = number.substr(0, number.length - opts.moneyPrecision),\n        masked = money.substr(0, money.length % 3),\n        cents = new Array(opts.precision + 1).join(\"0\")\n    ;\n    money = money.substr(money.length % 3, money.length);\n    for (var i = 0, len = money.length; i < len; i++) {\n      if (i % 3 === 0) {\n        masked += opts.delimiter;\n      }\n      masked += money[i];\n    }\n    masked = masked.replace(clearDelimiter, \"\");\n    masked = masked.length ? masked : \"0\";\n    var signal = \"\";\n    if(opts.showSignal === true) {\n      signal = value < 0 || (value.startsWith && value.startsWith('-')) ? \"-\" :  \"\";\n    }\n    if (!opts.zeroCents) {\n      var beginCents = number.length - opts.precision,\n          centsValue = number.substr(beginCents, opts.precision),\n          centsLength = centsValue.length,\n          centsSliced = (opts.precision > centsLength) ? opts.precision : centsLength\n      ;\n      cents = (cents + centsValue).slice(-centsSliced);\n    }\n    var output = opts.unit + signal + masked + opts.separator + cents;\n    return output.replace(clearSeparator, \"\") + opts.suffixUnit;\n  };\n\n  VMasker.toPattern = function(value, opts) {\n    var pattern = (typeof opts === 'object' ? opts.pattern : opts),\n        patternChars = pattern.replace(/\\W/g, ''),\n        output = pattern.split(\"\"),\n        values = value.toString().replace(/\\W/g, \"\"),\n        charsValues = values.replace(/\\W/g, ''),\n        index = 0,\n        i,\n        outputLength = output.length,\n        placeholder = (typeof opts === 'object' ? opts.placeholder : undefined)\n    ;\n    \n    for (i = 0; i < outputLength; i++) {\n      // Reached the end of input\n      if (index >= values.length) {\n        if (patternChars.length == charsValues.length) {\n          return output.join(\"\");\n        }\n        else if ((placeholder !== undefined) && (patternChars.length > charsValues.length)) {\n          return addPlaceholdersToOutput(output, i, placeholder).join(\"\");\n        }\n        else {\n          break;\n        }\n      }\n      // Remaining chars in input\n      else{\n        if ((output[i] === DIGIT && values[index].match(/[0-9]/)) ||\n            (output[i] === ALPHA && values[index].match(/[a-zA-Z]/)) ||\n            (output[i] === ALPHANUM && values[index].match(/[0-9a-zA-Z]/))) {\n          output[i] = values[index++];\n        } else if (output[i] === DIGIT || output[i] === ALPHA || output[i] === ALPHANUM) {\n          if(placeholder !== undefined){\n            return addPlaceholdersToOutput(output, i, placeholder).join(\"\");\n          }\n          else{\n            return output.slice(0, i).join(\"\");\n          }\n        }\n      }\n    }\n    return output.join(\"\").substr(0, i);\n  };\n\n  VMasker.toNumber = function(value) {\n    return value.toString().replace(/(?!^-)[^0-9]/g, \"\");\n  };\n  \n  VMasker.toAlphaNumeric = function(value) {\n    return value.toString().replace(/[^a-z0-9 ]+/i, \"\");\n  };\n\n  return VMasker;\n}));\n"]},"metadata":{},"sourceType":"script"}